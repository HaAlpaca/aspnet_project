@model IEnumerable<Movie>

@{
    ViewData["Title"] = "List of Movies";
}
@*write Code*@
<form class="mt-3" asp-controller="Movies" asp-action="Index">
    <select class="form-select form-select-sm mb-3 col-lg-2" name="ItemSelected" id="filterDropdown" aria-label="Large select example">
        <option selected disabled>Status</option>
        <option value=0>ALL</option>
        <option value=1>AVAILABLE</option>
        <option value=2>EXPIRED</option>
        <option value=3>UPCOMING</option>
    </select>
</form>

<div class="row" id="pagination"></div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Xử lý sự kiện onchange của dropdown list
        $('#filterDropdown').change(function () {
            var selectedValue = $(this).val();
            loadPage(1, selectedValue); // Trang đầu tiên là 1
        });

        // Xử lý sự kiện click của các liên kết phân trang
        $(document).on('click', '.pagination-link', function () {
            var page = $(this).data('page');
            var selectedValue = $('#filterDropdown').val();
            loadPage(page, selectedValue);
        });

        // Hàm gửi yêu cầu Ajax để lấy dữ liệu lọc và phân trang
        function loadPage(page, selectedValue) {
            $.ajax({
                url: '@Url.Action("Index", "Movies")',
                type: 'GET',
                data: { page: page, ItemSelected: selectedValue },
                success: function (result) {
                    // Cập nhật danh sách phim và điều khiển phân trang
                    $('#pagination').html(result);
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi
                    console.log(error);
                }
            });
        }

        // Tải trang đầu tiên khi trang được tải lần đầu
        loadPage(1, $('#filterDropdown').val());
    });
</script>

@await Html.PartialAsync("_CreateItem", "Movies")  